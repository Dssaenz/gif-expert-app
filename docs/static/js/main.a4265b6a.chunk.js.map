{"version":3,"sources":["components/add-category.js","components/git-grid-item.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/gif-grid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValues","setInputValues","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","propsTypes","PropTypes","func","isRequired","GifGridItem","title","url","className","src","alt","getCategories","categories","a","q","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","items","GifGrid","image","key","GifExpertApp","item","ReactDOM","render","document","getElementById"],"mappings":"wPAIMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACnCC,EADmC,KACtBC,EADsB,KAe1C,OACC,0BAAMC,SATc,SAAAC,GACpBA,EAAEC,iBACCJ,EAAYK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAsBO,OACvCN,EAAe,OAMf,2BACCO,KAAK,OACLC,MAAOT,EACPU,SAjBiB,SAAAP,GACnBF,EAAeE,EAAEQ,OAAOF,YAsB1BZ,EAAYe,WAAa,CACxBd,c,OAAee,EAAUC,KAAKC,YAGhBlB,QCvBAmB,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7B,OACC,yBAAKC,UAAU,0CACd,2BAAIF,GACJ,yBAAKG,IAAKF,EAAKG,IAAKJ,M,uBCaRK,EAfI,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACfC,EADe,YACNC,UAAUH,IACnBL,EAFe,UAJL,uCAIK,YAHN,2CAGM,YAEiBO,EAFjB,YAFR,YAEQ,SAGEE,MAAMT,GAHR,cAGfU,EAHe,gBAIEA,EAASC,OAJX,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QATf,kBAYda,GAZc,4CAAH,sDCeJM,EAhBM,SAACd,GAAgB,IAAD,EACRxB,mBAAS,CACpC+B,KAAM,GACNQ,SAAS,IAH0B,mBAC5BC,EAD4B,KACrBC,EADqB,KAapC,OAPAC,qBAAU,WACTnB,EAAcC,GAAYmB,MAAK,SAAAC,GAAK,OAAIH,EAAS,CAChDV,KAAMa,EACNL,SAAS,SAER,CAACf,IAEGgB,GCKOK,EAjBC,SAAC,GAAoB,IAAlBrB,EAAiB,EAAjBA,WAAiB,EAEDc,EAAad,GAAvCe,EAF2B,EAE3BA,QAAeH,EAFY,EAElBL,KAEjB,OAAGQ,EACK,2CAGP,yBAAKnB,UAAU,aACbI,EACAY,EAAOH,KAAI,SAACa,GAAD,OACX,kBAAC,EAAD,CAAaC,IAAKD,EAAMX,GAAIjB,MAAO4B,EAAM5B,MAAOC,IAAK2B,EAAM3B,WCQhD6B,EAlBM,WAAO,IAAD,EACUhD,mBAAS,IADnB,mBACnBwB,EADmB,KACPzB,EADO,KAG1B,OACC,oCACC,8CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC3ByB,EAAWS,KAAI,SAAAgB,GAAI,OACnB,kBAAC,EAAD,CACCF,IAAKE,EACLzB,WAAYyB,SCXjBC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.a4265b6a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst AddCategory = ({ setCategories }) => {\n\tconst [inputValues, setInputValues] = useState('')\n\n\tconst handleValue = e => {\n\t\tsetInputValues(e.target.value)\n\t}\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\t\tif(inputValues.trim().length > 2){\n\t\t\tsetCategories(cat => [ inputValues, ...cat ])\n\t\t\tsetInputValues('')\n\t\t}\n\t}\n\n\treturn(\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValues}\n\t\t\t\tonChange={handleValue}\n\t\t\t/>\n\t</form>\n\t)\n}\n\nAddCategory.propsTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory","import React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n\treturn(\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<p>{title}</p>\n\t\t\t<img src={url} alt={title} />\n\t\t</div>\n\t)\n}\n\nexport default GifGridItem","const base_url = 'https://api.giphy.com/v1/gifs/search'\nconst api_key = 'api_key=FjUdYRb0xCLKqnCO2u78Z6P3xgKTRq4c'\nconst limit = 'limit=10'\n\nconst getCategories = async (categories) => {\n\tconst q = `q=${encodeURI(categories)}`\n\tconst url = `${base_url}?${api_key}&${q}&${limit}`\n\tconst response = await fetch(url)\n\tconst { data } = await response.json()\n\tconst gifs = data.map(img => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url\n\t\t}\n\t})\n\treturn gifs\n}\n\nexport default getCategories","import { useEffect, useState } from \"react\"\nimport getCategories from \"../helpers/getGifs\";\n\nconst useFetchGifs = (categories) => {\n\tconst [ state, setState ] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t})\n\n\tuseEffect(() => {\n\t\tgetCategories(categories).then(items => setState({\n\t\t\tdata: items,\n\t\t\tloading: false\n\t\t}))\n\t}, [categories])\n\n\treturn state;\n}\n\nexport default useFetchGifs","import React from 'react'\nimport GifGridItem from './git-grid-item'\nimport useFetchGifs from \"../hooks/useFetchGifs\";\n\nconst GifGrid = ({ categories }) => {\n\n\tconst { loading, data: images } = useFetchGifs(categories)\n\n\tif(loading){\n\t\treturn <h1>Cargando...</h1>\n\t}\n\treturn (\n\t\t<div className=\"card-grid\">\n\t\t\t{categories}\n\t\t\t{images.map((image) => (\n\t\t\t\t<GifGridItem key={image.id} title={image.title} url={image.url} />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default GifGrid","import React, { useState } from 'react'\n\nimport AddCategory from './components/add-category'\nimport GifGrid from './components/gif-grid'\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState([])\n\n\treturn (\n\t\t<>\n\t\t\t<h2>gif expert app</h2>\n\t\t\t<br />\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t{categories.map(item => (\n\t\t\t\t<GifGrid\n\t\t\t\t\tkey={item}\n\t\t\t\t\tcategories={item}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}